#!/bin/bash
#
# Import the certs into jre cacerts.
#
# Usage: import_cacerts [options]
#
# Options:
#  -e | --envid=..     Specify the environment id.
#  -r | --role=..      Specify the role to import cacerts to.
#  -u | --url=..       Specify the URL to import cacerts from.
#                      For example: payments.api.srwd24.com
#  -f | --file=..      Specify the key file path to import.
#  -j | --jdkhome=..   Specify the path of the JDK.
#                      Default: BPM /opt/jdk1.5.0_22.
#                      Others: /opt/java
#                      cacerts file is located in $JDK_HOME/jre/lib/security/cacerts
#  -v | --verbose      Print verbose messages.
#
# Example:
#  import_cacerts -e srwd83 -r bpm -u payments.api.srwd83.com
#  import_cacerts -e srwe04 -r act -f /tmp/stubhub.cer
#  import_cacerts -e srwe04 -r bpm -u siebel.srwe04.com -j /opt/jdk1.6.0_15
#
# Author: minjzhang
#

options=$@

envid=""
role=""
url=""
jdk_home="/opt/java"
verbose=0

#
# Usage
#
function _usage() {
    cat <<EOF

import_cacerts $options
$*
Import the certs into jre cacerts.

Usage: import_cacerts [options]

Options:
 -e | --envid=..     Specify the environment id.
 -r | --role=..      Specify the role to import cacerts to.
 -u | --url=..       Specify the URL to import certs from.
                     For example: payments.api.srwd24.com
 -f | --file=..      Specify the key file path to import.
 -j | --jdkhome=..   Specify the path of the JDK.
                     Default: BPM /opt/jdk1.5.0_22.
                     Others: /opt/java
                     cacerts file is located in \$JDK_HOME/jre/lib/security/cacerts
 -v | --verbose      Print verbose messages.

Example:
 import_cacerts -e srwd83 -r bpm -u payments.api.srwd83.com
 import_cacerts -e srwe04 -r act -f /tmp/stubhub.cer
 import_cacerts -e srwe04 -r bpm -u siebel.srwe04.com -j /opt/jdk1.6.0_15

EOF
}

#
# Get options
#
OPTS=`getopt -o e:r:u:f:j:v -l envid:,role:,url:,file:,jdk_home:,verbose -- $options`
if [ $? != 0 ]; then
    echo "Error: Unrecognized parameters."
    _usage
    exit 1
fi

eval set -- "$OPTS"

while true ; do
    case "$1" in
        -e | --envid) envid="${2// }"; shift 2;;
        -r | --role) role="${2// }"; shift 2;;
        -u | --url) url="${2// }"; shift 2;;
        -f | --file) key_file="${2// }"; shift 2;;
        -j | --jdkhome) jdk_home="${2// }"; jdk_set=1; shift 2;;
        -v | --verbose) verbose=1; shift;;
        --) shift; break;;
    esac
done

if [[ "$jdk_set" != 1 && "$role" == "bpm" ]]; then
    jdk_home="/opt/jdk1.5.0_22"
fi

echo $jdk_home

#
# Print verbose message
#
function _print_verbose_msg {
    verbose_message=$1
    if [[ "$verbose" == 1 ]]; then
        echo $verbose_message
    fi
}

#
# Variable validation.
#
if [[ "$envid" == "" || "$role" == "" || ( "$url" == "" && "$key_file" == "" ) ]]; then
    echo "Error: Parameters '-e', '-r', either '-u' or '-f' must be set."
    _usage
    exit 1
fi

if [[ "$url" != "" && "$key_file" != "" ]]; then
    echo "Error: Parameters '-u' and '-f', only one need to be set."
    _usage
    exit 1
fi

#
# Main
#
tmp_certs="$(mktemp)"
tmp_der_certs="$(mktemp)"
tmp_yes="$(mktemp)"
key_name="key${RANDOM}"

# Deploy certs from URL.
if [[ "$url" != "" ]]; then
    grep $envid /nas/reg/etc/dev-qa-hosts | grep $role | while read host
    do
        ssh -oPasswordAuthentication=no -ostricthostkeychecking=no $host "echo 'yes' > $tmp_yes;
        /nas/utl/devops/bin/timeout 5 openssl s_client -connect $url:443 > $tmp_certs;
        openssl x509 -in $tmp_certs -outform DER -out $tmp_der_certs;
        sudo $jdk_home/bin/keytool -import -keystore $jdk_home/jre/lib/security/cacerts -storepass changeit -file $tmp_der_certs -alias $key_name < $tmp_yes" < /dev/null
    done
fi

# Deploy certs from key file.
if [[ "$key_file" != "" ]]; then
   grep $envid /nas/reg/etc/dev-qa-hosts | grep $role | while read host
    do
        ssh -oPasswordAuthentication=no -ostricthostkeychecking=no $host "echo 'yes' > $tmp_yes;
        sudo $jdk_home/bin/keytool -import -keystore $jdk_home/jre/lib/security/cacerts -storepass changeit -file $key_file -alias $key_name < $tmp_yes" < /dev/null
    done
fi

exit 0
