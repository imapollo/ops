#!/bin/bash
#
# Fix the ilog rules version based on versions on rule engine.
#
# Usage: fix_ilog_rule_version [options]
#
# Options:
#  -e | --env=..       Specify the environment need to be fixed. For example: srwd76.
#  -b | --branch=..    Specify the branch name if needed. For example: 13.8.0-SNAPSHOT.
#  -d | --debug        Print debug messages.
#
# Author: minjzhang
#

options=$@

debug_level=0

#
# Usage
#
function _usage() {
    cat <<EOF

fix_ilog_rule_version $options
$*
Usage: fix_ilog_rule_version [options]

Options:
  -e | --env=..       Specify the environment need to be fixed. For example: srwd76.
  -b | --branch=..    Specify the branch name if needed. For example: 13.8.0-SNAPSHOT.
  -d | --debug        Print debug messages.
EOF
}

#
# Get options
#
OPTS=`getopt -o e:b:d -l env:,branch:,debug -- $options`
if [ $? != 0 ]; then
    echo "Error: Unrecognized parameters."
    _usage
    exit 1
fi

eval set -- "$OPTS"

while true ; do
    case "$1" in
        -e | --env) envid=${2// }; shift 2;;
        -b | --branch) branch=${2// }; shift 2;;
        -d | --debug) debug_level=1; shift;;
        --) shift; break;;
    esac
done

#
# Print debug message
#
function _print_debug_msg {
    debug_message=$1
    if [[ "$debug_level" == 1 ]]; then
        echo $debug_message
    fi
}

#
# Main
#

#
# Get the ilog rules version from rule engine tables
#
ILOG_SID=`ssh ${envid}ilg001.${envid}.com "grep jdbc.ilog.url /etc/stubhub/properties/ENV.stubhub.properties | sed 's/.*SERVICE_NAME\s*=\s*\([A-Z0-9]\+\).*/\1/'" < /dev/null`
ILOG_USER=`ssh ${envid}ilg001.${envid}.com "grep jdbc.ilog.username /etc/stubhub/properties/ENV.stubhub.properties | sed 's/.*=\(.*\)/\1/'" < /dev/null`
ILOG_PASSWD=`ssh ${envid}ilg001.${envid}.com "grep jdbc.ilog.password /etc/stubhub/properties/ENV.stubhub.properties | sed 's/.*=\(.*\)/\1/'" < /dev/null`
ILOG_PASSWD="d$ILOG_USER";

ILOG_QUERY="$(mktemp)"
ILOG_QUERY_RESULT="$(mktemp)"
ILOG_STUB_PROPERTY_UPDATE="$(mktemp)"
echo "set linesize 3000
set wrap off
select NAME, MAJOR_VERSION, MINOR_VERSION from RULESETS;" > $ILOG_QUERY

. /nas/home/minjzhang/bin/setora

if [[ "$branch" == "" ]]; then
    branch=`ssh ${envid}ilg001.${envid}.com "ls -l /opt/jboss/server/default/deploy/stubhub" | awk '{ print $11 }' | awk -F/ '{ print $4 }' | sed 's/\(.*\)-[0-9\.]\+-[0-9]\+/\1/'`
fi

#
# Update the ilog rule versions in stub_property
#
sqlplus $ILOG_USER/$ILOG_PASSWD@$ILOG_SID < $ILOG_QUERY | grep -e "^[A-Za-z]\+\s*[0-9]\+\s*[0-9]\+\s*" | awk '{ print $1 ":" $2 ":" $3}' > $ILOG_QUERY_RESULT
cat $ILOG_QUERY_RESULT | while read line
do
    echo $line | sed "s/\(.*\):\(.*\):\(.*\)/update stub_property set property_value=\'\/\1\/1.0\/\1\/\2.\3\' where property_value like \'\/\1\/1.0\/\1\/%\' and description=\'$branch\';/" >> $ILOG_STUB_PROPERTY_UPDATE
done
echo "commit;" >> $ILOG_STUB_PROPERTY_UPDATE

sqlplus stub/dstub@$ILOG_SID < $ILOG_STUB_PROPERTY_UPDATE

#
# Invoke ilg stubhub properties refresh
#
grep ${envid}ilg /nas/reg/etc/dev-qa-hosts | while read line
do
    curl -s -X POST --data "action=invokeOp&name=Stubhub-Properties-StubhubRulesApps%3Aname%3DStubHub+Properties&methodIndex=1" http://${line}/jmx-console/HtmlAdaptor > /dev/null
done

exit 0
