#!/usr/bin/perl
#
# The wrapper script for noc network tools.
#
# Usage: noc_tool [options]
#
# Options:
#  -h | --help              Show help information.
#
# Examples:
#  noc_tool
#
# Author: minjzhang
#

use strict;
use warnings;
use Carp;
use Getopt::Long;

# Get options
my $show_usage = qw{};
my $show_verbose = qw{};
my $another = qw{};
my $options_okay = GetOptions (
    'a|another=s' => \$another,
    'v|verbose'   => \$show_verbose,
    'h|help'      => \$show_usage,
);

#
# Signal Handler
#
$SIG{'INT'} = \&sigIntHandler;

#
# Clean up and exit when catch SIGINT(2)
#
sub sigIntHandler {
    exit;
}

if ( $show_usage ) {
    usage();
    exit 0;
}

#
# Usage
#
sub usage {
    print <<END_OF_HELP
The wrapper script for noc network tools.

Usage: noc_tool [options]

Options:
 -h | --help              Show help information.

Examples:
 noc_tool

END_OF_HELP
}

#
# Main
#

print
"-------------------------------------------------------------------
|                            NOC Tools                            |
-------------------------------------------------------------------
";

print "Username: ";
my $username = <>;
chomp $username;
print "Password: ";
system("stty -echo");
my $password = <>;
chomp $password;
system("stty echo");
print "\n";

while (1) {
    print "Enter the tool number you want to use:
1. Block/unblock list
2. Switch Read-Only DB
q. quit
> ";
    my $menu = <>;
    chomp $menu;
    if ( $menu eq "q" ) {
        exit 0;
    }
    if ( $menu !~ /[12]/ ) {
        usage();
        next;
    } else {
        if ( $menu eq "1" ) {
            system("/nas/home/minjzhang/bin/Cloak-uncloak -u $username -x $password");
        } elsif ( $menu eq "2" ) {
            system("/nas/home/minjzhang/bin/switch_wideip -u $username -x $password -w test.noc.com");
        }
    }
}

exit 0;
